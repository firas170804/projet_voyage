<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Voyage | Dashboard</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <!-- Bibliothèque Three.js pour les animations 3D -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/three@0.128.0/examples/js/controls/OrbitControls.min.js"></script>
    <!-- Bibliothèque GSAP pour les animations -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.9.1/gsap.min.js"></script>
    <style>
        :root {
            --primary: #4361ee;
            --secondary: #3a0ca3;
            --accent: #f72585;
            --light: #f8f9fa;
            --dark: #212529;
            --gray: #6c757d;
            --success: #28a745;
            --warning: #ffc107;
            --danger: #dc3545;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        body {
            background-color: #f5f7fb;
            color: var(--dark);
            display: flex;
            min-height: 100vh;
            overflow-x: hidden;
        }

        /* Sidebar simplifiée */
        .sidebar {
            width: 220px;
            background: white;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
            padding: 20px 0;
            height: 100vh;
            position: fixed;
            z-index: 100;
            transition: transform 0.5s cubic-bezier(0.4, 0, 0.2, 1);
        }

        .sidebar:hover {
            transform: translateX(0) scale(1.02);
        }

        .logo {
            text-align: center;
            padding: 0 20px 20px;
            border-bottom: 1px solid #eee;
            margin-bottom: 20px;
            transition: all 0.3s;
        }

        .logo:hover {
            transform: scale(1.05);
        }

        .logo h2 {
            color: var(--primary);
            font-size: 1.3rem;
        }

        .nav-menu {
            list-style: none;
        }

        .nav-item {
            margin-bottom: 5px;
            transition: all 0.3s;
        }

        .nav-item:hover {
            transform: translateX(5px);
        }

        .nav-link {
            display: flex;
            align-items: center;
            padding: 12px 20px;
            color: var(--gray);
            text-decoration: none;
            transition: all 0.3s;
        }

        .nav-link:hover, .nav-link.active {
            background: rgba(67, 97, 238, 0.1);
            color: var(--primary);
            border-left: 3px solid var(--primary);
        }

        .nav-link i {
            margin-right: 10px;
            width: 20px;
            text-align: center;
        }

        /* Contenu principal */
        .main-content {
            flex: 1;
            margin-left: 220px;
            padding: 20px;
            position: relative;
            z-index: 1;
        }

        .header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 30px;
            padding-bottom: 20px;
            border-bottom: 1px solid #eee;
        }

        .page-title h1 {
            font-size: 1.8rem;
            color: var(--dark);
            position: relative;
            display: inline-block;
        }

        .page-title h1::after {
            content: '';
            position: absolute;
            bottom: -10px;
            left: 0;
            width: 50px;
            height: 3px;
            background: var(--primary);
            border-radius: 3px;
        }

        .user-menu {
            display: flex;
            align-items: center;
            transition: all 0.3s;
            cursor: pointer;
        }

        .user-menu:hover {
            transform: scale(1.05);
        }

        .user-avatar {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            object-fit: cover;
            margin-right: 10px;
            border: 2px solid var(--primary);
            transition: all 0.3s;
        }

        .user-menu:hover .user-avatar {
            transform: rotate(10deg);
            box-shadow: 0 0 10px rgba(67, 97, 238, 0.5);
        }

        /* Cartes statistiques */
        .stats-container {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .stat-card {
            background: white;
            border-radius: 8px;
            padding: 20px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.05);
            transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
            position: relative;
            overflow: hidden;
        }

        .stat-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }

        .stat-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 5px;
            background: var(--primary);
            transform: scaleX(0);
            transform-origin: left;
            transition: transform 0.3s;
        }

        .stat-card:hover::before {
            transform: scaleX(1);
        }

        .stat-header {
            display: flex;
            justify-content: space-between;
            margin-bottom: 15px;
        }

        .stat-icon {
            width: 40px;
            height: 40px;
            border-radius: 8px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 1.2rem;
            transition: all 0.3s;
        }

        .stat-card:hover .stat-icon {
            transform: rotate(15deg) scale(1.1);
        }

        .icon-blue { background: var(--primary); }
        .icon-green { background: var(--success); }
        .icon-orange { background: var(--warning); }
        .icon-red { background: var(--danger); }

        .stat-value {
            font-size: 1.8rem;
            font-weight: 700;
            margin-bottom: 5px;
            transition: all 0.3s;
        }

        .stat-card:hover .stat-value {
            color: var(--primary);
        }

        .stat-title {
            color: var(--gray);
            font-size: 0.9rem;
        }

        /* Tableau récent */
        .recent-table {
            background: white;
            border-radius: 8px;
            padding: 20px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.05);
            transition: all 0.3s;
            position: relative;
            overflow: hidden;
        }

        .recent-table:hover {
            transform: translateY(-3px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }

        .table-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }

        table {
            width: 100%;
            border-collapse: collapse;
        }

        th, td {
            padding: 12px 15px;
            text-align: left;
            border-bottom: 1px solid #eee;
            transition: all 0.2s;
        }

        tr:hover td {
            background: rgba(67, 97, 238, 0.05);
            transform: translateX(5px);
        }

        th {
            color: var(--gray);
            font-weight: 500;
            font-size: 0.9rem;
        }

        .status {
            display: inline-block;
            padding: 5px 10px;
            border-radius: 20px;
            font-size: 0.8rem;
            font-weight: 500;
        }

        .status-confirmed { background: rgba(40, 167, 69, 0.1); color: var(--success); }
        .status-pending { background: rgba(255, 193, 7, 0.1); color: var(--warning); }
        .status-cancelled { background: rgba(220, 53, 69, 0.1); color: var(--danger); }

        .btn {
            padding: 8px 15px;
            border-radius: 4px;
            border: none;
            cursor: pointer;
            font-weight: 500;
            transition: all 0.3s;
            position: relative;
            overflow: hidden;
        }

        .btn-primary {
            background: var(--primary);
            color: white;
        }

        .btn-primary:hover {
            background: var(--secondary);
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        }

        .btn-primary::after {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            width: 5px;
            height: 5px;
            background: rgba(255, 255, 255, 0.5);
            opacity: 0;
            border-radius: 100%;
            transform: scale(1, 1) translate(-50%);
            transform-origin: 50% 50%;
        }

        .btn-primary:hover::after {
            animation: ripple 1s ease-out;
        }

        @keyframes ripple {
            0% {
                transform: scale(0, 0);
                opacity: 1;
            }
            20% {
                transform: scale(25, 25);
                opacity: 1;
            }
            100% {
                opacity: 0;
                transform: scale(40, 40);
            }
        }

        /* Animation 3D Globe */
        #globe-container {
            position: fixed;
            bottom: 20px;
            right: 20px;
            width: 200px;
            height: 200px;
            z-index: 0;
            opacity: 0.7;
            transition: all 0.5s;
        }

        #globe-container:hover {
            opacity: 1;
            transform: scale(1.1);
        }

        /* Effet de particules */
        #particles-js {
            position: fixed;
            width: 100%;
            height: 100%;
            top: 0;
            left: 0;
            z-index: -1;
            pointer-events: none;
        }

        /* Animation de fond */
        .background-animation {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: -2;
            background: linear-gradient(-45deg, #f5f7fb, #e0e5f8, #d6e0ff, #c9d6ff);
            background-size: 400% 400%;
            animation: gradientBG 15s ease infinite;
        }

        @keyframes gradientBG {
            0% {
                background-position: 0% 50%;
            }
            50% {
                background-position: 100% 50%;
            }
            100% {
                background-position: 0% 50%;
            }
        }

        /* Responsive */
        @media (max-width: 992px) {
            .sidebar {
                width: 70px;
                overflow: hidden;
            }
            .logo h2, .nav-link span {
                display: none;
            }
            .nav-link {
                justify-content: center;
            }
            .main-content {
                margin-left: 70px;
            }
            #globe-container {
                width: 150px;
                height: 150px;
                bottom: 10px;
                right: 10px;
            }
        }

        @media (max-width: 768px) {
            .stats-container {
                grid-template-columns: 1fr 1fr;
            }
        }

        @media (max-width: 576px) {
            .stats-container {
                grid-template-columns: 1fr;
            }
            .header {
                flex-direction: column;
                align-items: flex-start;
            }
            .user-menu {
                margin-top: 15px;
            }
            #globe-container {
                display: none;
            }
        }
    </style>
</head>
<body>
    <!-- Animation de fond -->
    <div class="background-animation"></div>
    
    <!-- Effet de particules -->
    <div id="particles-js"></div>
    
    <!-- Globe 3D -->
    <div id="globe-container"></div>

    <!-- Sidebar -->
    <div class="sidebar">
        <div class="logo">
            <h2><i class="fas fa-plane"></i> TravelAdmin</h2>
        </div>
        <ul class="nav-menu">
            <li class="nav-item">
                <a href="{{ path('admin_dashboard') }}" class="nav-link active">
                    <i class="fas fa-tachometer-alt"></i>
                    <span>Dashboard</span>
                </a>
            </li>
            <li class="nav-item">
                <a href="{{ path('app_vol_index') }}" class="nav-link">
                    <i class="fas fa-plane"></i>
                    <span>Vols</span>
                </a>
            </li>
            <li class="nav-item">
                <a href="{{ path('app_compagnie_index') }}" class="nav-link">
                    <i class="fas fa-hotel"></i>
                    <span>Compagnies</span>
                </a>
            </li>
            <li class="nav-item">
                <a href="{{ path('app_aeroport_index') }}" class="nav-link">
                    <i class="fas fa-plane-departure"></i>
                    <span>Aeroports</span>
                </a>
            </li>
            <li class="nav-item">
                <a href="{{ path('app_user_index') }}" class="nav-link">
                    <i class="fas fa-users"></i>
                    <span>Clients</span>
                </a>
            </li>
            <li class="nav-item">
                <a href="{{ path('app_reservation_index') }}" class="nav-link">
                    <i class="fas fa-bookmark"></i>
                    <span>Réservations</span>
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link text-danger" href="{{ path('app_logout') }}">
                    <i class="fas fa-sign-out-alt"></i>
                    <span>Se déconnecter</span>
                </a>
            </li>
        </ul>
    </div>

    <!-- Main Content -->
    <div class="main-content">
        <!-- Header -->
        <div class="header">
            <div class="page-title">
                <h1>Tableau de Bord</h1>
            </div>
            <a class="nav-link" href="{{ path('app_user_show') }}">
                <div class="user-menu">
                    <img src="https://ui-avatars.com/api/?name={{ app.user.nom }}+{{ app.user.prenom }}&background=4361ee&color=fff&size=200" alt="Avatar" class="user-avatar">
                    <span>{{ app.user.nom }} {{ app.user.prenom }}</span>
                </div>
            </a>
        </div>

        <!-- Stats Cards -->
        <div class="stats-container">
            <div class="stat-card">
                <div class="stat-header">
                    <div>
                        <div class="stat-value">{{ total_vols }}</div>
                        <div class="stat-title">Vols programmés</div>
                    </div>
                    <div class="stat-icon icon-blue">
                        <i class="fas fa-plane"></i>
                    </div>
                </div>
            </div>
            <div class="stat-card">
                <div class="stat-header">
                    <div>
                        <div class="stat-value">{{ total_reservations }}</div>
                        <div class="stat-title">Réservations</div>
                    </div>
                    <div class="stat-icon icon-green">
                        <i class="fas fa-bookmark"></i>
                    </div>
                </div>
            </div>
            <div class="stat-card">
                <div class="stat-header">
                    <div>
                        <div class="stat-value">{{ total_compagnies }}</div>
                        <div class="stat-title">Compagnies</div>
                    </div>
                    <div class="stat-icon icon-red">
                        <i class="fas fa-hotel"></i>
                    </div>
                </div>
            </div>
            <div class="stat-card">
                <div class="stat-header">
                    <div>
                        <div class="stat-value">{{ total_users }}</div>
                        <div class="stat-title">Utilisateurs</div>
                    </div>
                    <div class="stat-icon icon-orange">
                        <i class="fas fa-users"></i>
                    </div>
                </div>
            </div>
        </div>

        <!-- Recent Bookings -->
        <div class="recent-table">
            <div class="table-header">
                <h2>Réservations récentes</h2>
                <a href="{{ path('app_reservation_index') }}" class="nav-link"><button class="btn btn-primary">Voir tout</button></a>
            </div>
            <table>
                <thead>
                    <tr>
                        <th>Nom</th>
                        <th>Prénom</th>
                        <th>Classe</th>
                        <th>Date</th>
                    </tr>
                </thead>
                <tbody>
                    {% for reservation in latest_reservations %}
                        <tr>
                            <td>{{ reservation.nom }}</td>
                            <td>{{ reservation.prenom }}</td>
                            <td>{{ reservation.classe }}</td>
                            <td>{{ reservation.dateReservation|date('d/m/Y H:i') }}</td>
                        </tr>
                    {% else %}
                        <tr><td colspan="4">Aucune réservation récente.</td></tr>
                    {% endfor %}
                </tbody>
            </table>
        </div>
    </div>

    <!-- Scripts pour les animations -->
    <script src="https://cdn.jsdelivr.net/particles.js/2.0.0/particles.min.js"></script>
    <script>
        // Gestion simple de la navigation
        document.addEventListener('DOMContentLoaded', function() {
            const navLinks = document.querySelectorAll('.nav-link');
            
            navLinks.forEach(link => {
                link.addEventListener('click', function() {
                    navLinks.forEach(l => l.classList.remove('active'));
                    this.classList.add('active');
                });
            });

            // Initialiser les particules
            particlesJS('particles-js', {
                "particles": {
                    "number": {
                        "value": 80,
                        "density": {
                            "enable": true,
                            "value_area": 800
                        }
                    },
                    "color": {
                        "value": "#4361ee"
                    },
                    "shape": {
                        "type": "circle",
                        "stroke": {
                            "width": 0,
                            "color": "#000000"
                        },
                        "polygon": {
                            "nb_sides": 5
                        }
                    },
                    "opacity": {
                        "value": 0.3,
                        "random": false,
                        "anim": {
                            "enable": false,
                            "speed": 1,
                            "opacity_min": 0.1,
                            "sync": false
                        }
                    },
                    "size": {
                        "value": 3,
                        "random": true,
                        "anim": {
                            "enable": false,
                            "speed": 40,
                            "size_min": 0.1,
                            "sync": false
                        }
                    },
                    "line_linked": {
                        "enable": true,
                        "distance": 150,
                        "color": "#4361ee",
                        "opacity": 0.2,
                        "width": 1
                    },
                    "move": {
                        "enable": true,
                        "speed": 2,
                        "direction": "none",
                        "random": false,
                        "straight": false,
                        "out_mode": "out",
                        "bounce": false,
                        "attract": {
                            "enable": false,
                            "rotateX": 600,
                            "rotateY": 1200
                        }
                    }
                },
                "interactivity": {
                    "detect_on": "canvas",
                    "events": {
                        "onhover": {
                            "enable": true,
                            "mode": "grab"
                        },
                        "onclick": {
                            "enable": true,
                            "mode": "push"
                        },
                        "resize": true
                    },
                    "modes": {
                        "grab": {
                            "distance": 140,
                            "line_linked": {
                                "opacity": 1
                            }
                        },
                        "bubble": {
                            "distance": 400,
                            "size": 40,
                            "duration": 2,
                            "opacity": 8,
                            "speed": 3
                        },
                        "repulse": {
                            "distance": 200,
                            "duration": 0.4
                        },
                        "push": {
                            "particles_nb": 4
                        },
                        "remove": {
                            "particles_nb": 2
                        }
                    }
                },
                "retina_detect": true
            });

            // Initialiser le globe 3D
            initGlobe();
        });

        // Fonction pour créer le globe 3D
        function initGlobe() {
            const container = document.getElementById('globe-container');
            const width = container.clientWidth;
            const height = container.clientHeight;

            // Créer la scène
            const scene = new THREE.Scene();
            scene.background = new THREE.Color(0x00000000); // Transparent

            // Créer la caméra
            const camera = new THREE.PerspectiveCamera(45, width / height, 0.1, 1000);
            camera.position.z = 300;

            // Créer le rendu
            const renderer = new THREE.WebGLRenderer({ alpha: true, antialias: true });
            renderer.setSize(width, height);
            container.appendChild(renderer.domElement);

            // Ajouter des contrôles pour faire tourner le globe
            const controls = new THREE.OrbitControls(camera, renderer.domElement);
            controls.enableZoom = false;
            controls.enablePan = false;
            controls.autoRotate = true;
            controls.autoRotateSpeed = 1.5;

            // Créer la sphère (globe)
            const geometry = new THREE.SphereGeometry(100, 32, 32);
            
            // Charger la texture de la Terre
            const textureLoader = new THREE.TextureLoader();
            const texture = textureLoader.load('https://threejs.org/examples/textures/planets/earth_atmos_2048.jpg');
            const bumpMap = textureLoader.load('https://threejs.org/examples/textures/planets/earth_normal_2048.jpg');
            const specularMap = textureLoader.load('https://threejs.org/examples/textures/planets/earth_specular_2048.jpg');
            
            const material = new THREE.MeshPhongMaterial({
                map: texture,
                bumpMap: bumpMap,
                bumpScale: 0.05,
                specularMap: specularMap,
                specular: new THREE.Color('grey'),
                shininess: 5
            });
            
            const sphere = new THREE.Mesh(geometry, material);
            scene.add(sphere);

            // Ajouter des nuages
            const cloudGeometry = new THREE.SphereGeometry(101, 32, 32);
            const cloudTexture = textureLoader.load('https://threejs.org/examples/textures/planets/earth_clouds_1024.png');
            const cloudMaterial = new THREE.MeshPhongMaterial({
                map: cloudTexture,
                transparent: true,
                opacity: 0.4
            });
            const clouds = new THREE.Mesh(cloudGeometry, cloudMaterial);
            scene.add(clouds);

            // Ajouter des lumières
            const ambientLight = new THREE.AmbientLight(0x333333);
            scene.add(ambientLight);

            const directionalLight = new THREE.DirectionalLight(0xffffff, 1);
            directionalLight.position.set(1, 1, 1);
            scene.add(directionalLight);

            // Animation
            function animate() {
                requestAnimationFrame(animate);
                
                // Faire tourner les nuages légèrement plus vite que le globe
                sphere.rotation.y += 0.0005;
                clouds.rotation.y += 0.0007;
                
                controls.update();
                renderer.render(scene, camera);
            }

            animate();

            // Redimensionnement
            window.addEventListener('resize', function() {
                camera.aspect = container.clientWidth / container.clientHeight;
                camera.updateProjectionMatrix();
                renderer.setSize(container.clientWidth, container.clientHeight);
            });
        }

        // Animation GSAP pour les éléments de la page
        gsap.from(".sidebar", {
            duration: 1,
            x: -100,
            opacity: 0,
            ease: "power3.out"
        });

        gsap.from(".header", {
            duration: 0.8,
            y: -50,
            opacity: 0,
            delay: 0.3,
            ease: "back.out(1.7)"
        });

        gsap.from(".stat-card", {
            duration: 0.8,
            y: 50,
            opacity: 0,
            stagger: 0.1,
            delay: 0.5,
            ease: "back.out(1.7)"
        });

        gsap.from(".recent-table", {
            duration: 0.8,
            y: 50,
            opacity: 0,
            delay: 0.8,
            ease: "back.out(1.7)"
        });

        // Animation au survol des cartes stats
        document.querySelectorAll('.stat-card').forEach(card => {
            card.addEventListener('mouseenter', () => {
                gsap.to(card, {
                    duration: 0.3,
                    scale: 1.03,
                    ease: "power1.out"
                });
            });
            
            card.addEventListener('mouseleave', () => {
                gsap.to(card, {
                    duration: 0.3,
                    scale: 1,
                    ease: "power1.out"
                });
            });
        });
    </script>
</body>
</html>